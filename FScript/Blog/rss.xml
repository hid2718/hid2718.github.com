<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:iweb="http://www.apple.com/iweb" version="2.0">
  <channel>
    <title>F-Script で遊んでみよう！&#13;Let’s play with F-Script !</title>
    <link>http://hid2718.github.com/FScript/Blog/Blog.html</link>
    <description>このページには、 F-Script ビギナーにとって役立ちそうな様々な情報や、 また、私自身が F-Script を使いながら感じたこと、やってみたことやその結果などを、自分の体験をベースに記録して行こうと思います。</description>
    <generator>iWeb 3.0.4</generator>
    <image>
      <url>http://hid2718.github.com/FScript/Blog/Blog_files/2013-01-02%2000.02.01-leveled.jpg</url>
      <title>F-Script で遊んでみよう！&#13;Let’s play with F-Script !</title>
      <link>http://hid2718.github.com/FScript/Blog/Blog.html</link>
    </image>
    <item>
      <title>［日誌］第51回 Smalltalk勉強会 でプレゼンを行った： F-Script の概要紹介＆デモ</title>
      <link>http://hid2718.github.com/FScript/Blog/entori/2013/2/22_%5Bri_zhi%5D_di51hui_Smalltalk_mian_qiang_hui_de_F-Script_no_gai_yaowo_shao_jie.html</link>
      <guid isPermaLink="false">8499fca1-8e41-44e2-83e5-073516e82c73</guid>
      <pubDate>Fri, 22 Feb 2013 19:44:57 +0900</pubDate>
      <description>&lt;a href=&quot;http://hid2718.github.com/FScript/Blog/entori/2013/2/22_%5Bri_zhi%5D_di51hui_Smalltalk_mian_qiang_hui_de_F-Script_no_gai_yaowo_shao_jie_files/2013-06-23%2019.53.04.jpg&quot;&gt;&lt;img src=&quot;http://hid2718.github.com/FScript/Blog/Media/object002_1.jpg&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:183px; height:137px;&quot;/&gt;&lt;/a&gt;今日は、&lt;a href=&quot;http://www.smalltalk-users.jp/Home&quot;&gt;Smalltalk-users-jp&lt;/a&gt; の梅澤さんが東京で毎月開催している &lt;a href=&quot;http://www.smalltalk-users.jp/Home/gao-zhi/dai51kaismalltalkbenkyoukai&quot;&gt;Smalltalk勉強会&lt;/a&gt; で、F-Script の概要紹介といくつかのデモからなるプレゼンをさせて頂いた。タイトルは「F-Script 第2回 - Mac OS X が Smalltalk になっちゃう！」&lt;br/&gt;このタイトルは、&lt;a href=&quot;http://www.smalltalk-users.jp/Home/gao-zhi/dai28kaismalltalkbenkyoukai&quot;&gt;二年前の１月の Smalltalk勉強会&lt;/a&gt; における &lt;a href=&quot;https://docs.google.com/viewer?a=v&amp;pid=sites&amp;srcid=c21hbGx0YWxrLXVzZXJzLmpwfGhvbWV8Z3g6NmYzMzdmNzQ4ZTBiNzJmZQ&quot;&gt;林徹也さんの F-Script に関する最初の発表&lt;/a&gt;のタイトルをそのまま拝借させて頂いて、その「第2回」としたものだ。&lt;br/&gt;&lt;br/&gt;F-Script には 大別して二つの側面がある。&lt;br/&gt;その一つは、「Cocoa オブジェクトスクリプティング環境の提供」という実践改善的な側面であり、もう一つは、「OOPAL（Object Oriented Programming and Array programming Language integration）という革新的言語環境の具体的提案」という実験的な側面だ。&lt;a href=&quot;https://docs.google.com/viewer?a=v&amp;pid=sites&amp;srcid=c21hbGx0YWxrLXVzZXJzLmpwfGhvbWV8Z3g6NmYzMzdmNzQ4ZTBiNzJmZQ&quot;&gt;前回の林さんの発表資料&lt;/a&gt;には、その全体像が、偏り無く非常に簡潔に要約されている。&lt;br/&gt;そこで、今回の発表では、この二つの側面のうち、前者に焦点を絞り、その特徴と使い方を、実例デモを含めてやや詳しく紹介することにした。&lt;br/&gt;&lt;br/&gt;■ 今回の発表のアジェンダ&lt;br/&gt;&lt;br/&gt;・F-Script 日本語サイト F-Script-ja の紹介&lt;br/&gt;　動機／立ち上げまでの経緯／サイトマップなど&lt;br/&gt;&lt;br/&gt;    ・F-Script とは&lt;br/&gt;    ・F-Script-ja の紹介 1/2 2/2&lt;br/&gt;    ・配布物&lt;br/&gt;&lt;br/&gt;・F-Script 基礎編&lt;br/&gt;　林徹也さんの第１回資料をベースに基礎知識を復習&lt;br/&gt;&lt;br/&gt;    ・F-Script の二つの側面&lt;br/&gt;    ・利用シーン&lt;br/&gt;    ・ツール／環境&lt;br/&gt;    ・Console&lt;br/&gt;    ・Browser&lt;br/&gt;    ・編集／実行：３つの方法&lt;br/&gt;    ・保存の方法&lt;br/&gt;    ・OOPAL 言語 1/2 クラス定義&lt;br/&gt;    ・OOPAL 言語 2/2 実行環境&lt;br/&gt;    ・Objective-C との比較&lt;br/&gt;    ・Smalltalk との比較 1/3 2/3 3/3&lt;br/&gt;&lt;br/&gt;・F-Script 実践編 - Let’s enjoy Cocoa Scripting !!&lt;br/&gt;　実際に動かしてみよう&lt;br/&gt;&lt;br/&gt;    ・デモ 1/2 &lt;br/&gt;        ・FollowingCircleView.fs&lt;br/&gt;    ・デモ 2/2&lt;br/&gt;        ・F-Script で F-Script 自身を操作／改造する&lt;br/&gt;    ・必要な知識 1/3 2/3 3/3&lt;br/&gt;    ・実践：doit! 1/2&lt;br/&gt;        ・本日配付フォルダの中身&lt;br/&gt;    ・実践：doit! 2/2&lt;br/&gt;        ・チュートリアルのサンプルを動かしてみよう！&lt;br/&gt;        ・本日の配付サンプルを動かしてみよう！&lt;br/&gt;        ・コンソールウィンドウをあれこれ改造してみよう！ &lt;br/&gt;&lt;br/&gt;・本家ドキュメントに載っていない Tips の紹介&lt;br/&gt;　IB で創った nib ファイルを F-Script から使うには&lt;br/&gt;&lt;br/&gt;    ・additional Tips 1/2&lt;br/&gt;        ・IB で創った GUI（nib）を F-Script から使うには&lt;br/&gt;    ・additional Tips 2/2&lt;br/&gt;        ・NSNib を使った nib の読み込み方&lt;br/&gt;    ・Future Work&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;■ 最後に&lt;br/&gt;&lt;br/&gt;本日の発表の現場では、出席者の皆さんから質問や関連情報などをたくさん戴き、大変有意義な時間になった。&lt;br/&gt;また、デモの最中に、不測の「不具合」が出てしまった際には、一瞬恐縮したが、ブーイングどころか、次から次に「原因究明の為のアイディア」が提案され、いつの間にか場が、出席者全員総がかりのデバッグ大会と化していた！&lt;br/&gt;今日の出席者の皆さん全員に、心から感謝したい。&lt;br/&gt;</description>
      <enclosure url="http://hid2718.github.com/FScript/Blog/entori/2013/2/22_%5Bri_zhi%5D_di51hui_Smalltalk_mian_qiang_hui_de_F-Script_no_gai_yaowo_shao_jie_files/2013-06-23%2019.53.04.jpg" length="43859" type="image/jpeg"/>
    </item>
    <item>
      <title>［入門］ウィンドウを表示して、その透明度を変える</title>
      <link>http://hid2718.github.com/FScript/Blog/entori/2013/2/9_%5Bru_men%5Du%7Eindouwo_yitsu_biao_shishitemiyou.html</link>
      <guid isPermaLink="false">92358837-a08f-4710-8e23-f1cbcb46d649</guid>
      <pubDate>Sat, 9 Feb 2013 18:49:15 +0900</pubDate>
      <description>&lt;a href=&quot;http://hid2718.github.com/FScript/Blog/entori/2013/2/9_%5Bru_men%5Du%7Eindouwo_yitsu_biao_shishitemiyou_files/2013-06-09%2023.08.17.jpg&quot;&gt;&lt;img src=&quot;http://hid2718.github.com/FScript/Blog/Media/object000_3.jpg&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:183px; height:88px;&quot;/&gt;&lt;/a&gt;■ ウィンドウを一つ創って表示する&lt;br/&gt;&lt;br/&gt;F-Script.app を起動して、F-Script コンソールに以下のように入力してみよう。&lt;br/&gt;まず、ウィンドウのインスタンスを一つ創る：&lt;br/&gt;&lt;br/&gt;    &gt; aWin := NSWindow alloc initWithContentRect: (100&amp;lt;&gt;100 extent:300&amp;lt;&gt;200) &lt;br/&gt;                                           styleMask: NSTitledWindowMask+NSClosableWindowMask&lt;br/&gt;                                           backing: NSBackingStoreBuffered                                    &lt;br/&gt;                                           defer: NO                                                                        &lt;br/&gt;&lt;br/&gt;これで、ウィンドウのインスタンスができて、変数 aWin に代入（束縛）された。&lt;br/&gt;&lt;br/&gt;上記の文は、本来、一行に書かれるべき内容だが、任意の区切り箇所で改行することができる。その場合、「return」キーを押すと「実行」と解釈されてしまうので注意しよう。実行せずに「改行」したい場合は、「Ctrl」キーを押しながら「return」を押す。最後の ... defer: NO の後だけは、「実行」の「return」だ。&lt;br/&gt;また、読み易くする為の空白は任意の数だけ入力してよい。&lt;br/&gt;&lt;br/&gt;これを画面に表示するには、この変数 aWin に以下のメッセージを送る：&lt;br/&gt;&lt;br/&gt;    &gt; aWin orderFront: nil&lt;br/&gt;&lt;br/&gt;これで、ウィンドウが一つ画面に表示されるはずだ。&lt;br/&gt;&lt;br/&gt;■ ウィンドウの透明度を変える&lt;br/&gt;&lt;br/&gt;以下のようにすることで、ウィンドウ全体の透明度を変えることができる：&lt;br/&gt;&lt;br/&gt;    &gt; aWin setAlphaValue: 0.5&lt;br/&gt;&lt;br/&gt;メッセージ setAlphaValue: には、引数として、透明度を表す 0.0 ~ 1.0 の値を渡す。0.0 で完全に透明になり、1.0 で完全に不透明になる。デフォルト値は 1.0（完全な不透明）だ。&lt;br/&gt;&lt;br/&gt;ついでに、このウィンドウのタイトルバーにタイトルも設定してみよう：&lt;br/&gt;&lt;br/&gt;    &gt; aWin setTitle: '初めてのウィンドウ'&lt;br/&gt;&lt;br/&gt;前回の記事にも書いたように、F-Script コンソールの入力中に日本語変換を行うと、その確定操作の「改行」が、「実行」と解釈されてしまい、うまく日本語入力ができない。しかし事前に、別のエディタ等で入力する日本語文字列を用意しておき、それをコピペする分には問題はない。今回は、上記の行をそのままコピペすると良い。&lt;br/&gt;&lt;br/&gt;■ 何をしているのか：文法的な解説&lt;br/&gt;&lt;br/&gt;こんな短いコードでも、学べることがたくさんある。&lt;br/&gt;このコードは、全体としては、Cocoa が提供する ApplicationKit.framework で定義された NSWindow クラスのインスタンスを一つ創り、それに対して自分自身を画面に表示させるメッセージを送っている。その後で、さらに、タイトルを設定するメッセージや、透明度を設定するメッセージも送った。このコードがやっていることを、少し踏み込んで見てみよう。Objective-C との違いに焦点を当ててみる。&lt;br/&gt;&lt;br/&gt;Objective-C との対比で見た場合、文法上のポイントは次の通り。&lt;br/&gt;&lt;br/&gt;    ・#import &amp;lt;Foundation/Foundation.h&gt; #import &amp;lt;AppKit/AppKit.h&gt; 等の宣言は不要&lt;br/&gt;    ・各 Cocoa クラスで定義された各種 Cocoa 定数がそのまま使える&lt;br/&gt;    ・変数と代入&lt;br/&gt;    ・メッセージ式に［］は不要&lt;br/&gt;    ・全ての Cocoa クラスとそれらのメソッドは（ほぼ全て）そのまま使える&lt;br/&gt;&lt;br/&gt;以下に一つずつ説明しよう。&lt;br/&gt;&lt;br/&gt;１）#import &amp;lt;Foundation/Foundation.h&gt;、#import &amp;lt;AppKit/AppKit.h&gt; 等の宣言は不要&lt;br/&gt;&lt;br/&gt;F-Script.app は一つの Cocoa アプリケーションであり、起動時に４０個もの Cocoa フレームワークをリンクして、それぞれに必要なヘッダーファイルを既に #import している。 F-Script.app 内部の F-Script インタプリタは、これらのフレームワークとヘッダーファイルにある各種定義に常時アクセスできるのだ。&lt;br/&gt;従って、F-Script でコードを書く際は、これらフレームワークやヘッダーファイルを改めて読み込む必要はない。&lt;br/&gt;&lt;br/&gt;起動時に読み込まれるフレームワークにはどのようなものがあるのか、そのリストが チュートリアル 7. &lt;a href=&quot;http://hid2718.github.com/FScript/AccessingMacOSXFrameworksWithFScript-index-ja.html&quot;&gt;F-Script で Mac OS X のフレームワーク群にアクセスする&lt;/a&gt; に掲載されている。しかし、これらは Cocoa の提供する膨大なフレームワークのごく一部に過ぎない。これ以外のフレームワークを利用したい場合は、明示的にそのフレームワークを読み込む必要がある。同じチュートリアルに、その読み込み方法についての具体的な説明がある。&lt;br/&gt;&lt;br/&gt;２）各 Cocoa クラスで定義された各種 Cocoa 定数が、そのまま使える&lt;br/&gt;&lt;br/&gt;上記のコードに「 NSTitledWindowMask」や「NSClosableWindowMask」等の Cocoa 定数をそのまま使えるのも同じ理由による。これらの定数は、読込済みフレームワークのヘッダーファイル内部で定義されている。&lt;br/&gt;&lt;br/&gt;３）変数と代入： aWin := ...&lt;br/&gt;&lt;br/&gt;F-Script では、特別な型指定をしない限り、変数は全て「id 型」で、宣言無しでいきなり使える。また、代入は、「=」ではなく「:=」で表す。これらは Smalltalk と同じだ。&lt;br/&gt;&lt;br/&gt;ただし、F-Script は Objective-C と全く同様に「Objective-C ランタイム」を使って動いている為、Objective-C で書かれた各種フレームワークとの遣り取りが必要なメソッドを使用する際には、Objective-C とのマッピングの為に明示的な型指定が必要になる。例えば、NSView クラスを継承して独自クラスを作る場合がそうだ。その再描画を司るメソッドである「drawRect:」周りは、これが、Objective-C のフレームワークからコールバックされる為、引数、戻り値共に、明示的な型指定が必要となる。&lt;br/&gt;この点については、チュートリアル 4. &lt;a href=&quot;http://hid2718.github.io/FScript/CreatingCocoaClassesWithFScript-index-ja.html&quot;&gt;F-Script で Cocoa クラスを創る&lt;/a&gt; の「さらにメソッドについて」の節に詳しい解説がある。また、F-Script Guide の &lt;a href=&quot;http://hid2718.github.io/FScript/F-Script-Guide-ja/F-Script-Guide-1-16-ja.html#mozTocId433866&quot;&gt;15 Objective-C マッピング の節&lt;/a&gt; も合わせて参照するとよい。&lt;br/&gt;&lt;br/&gt;４）メッセージ式に［］は不要： NSWindow alloc initWithContentRect: ...&lt;br/&gt;&lt;br/&gt;Objective-C では「メッセージ式」は［］で括って表し、普通のCのコードとは分離して扱われるが、F-Script では、Smalltalk と同様「全てがメッセージ式」であり、メッセージ式に［］は使わない。&lt;br/&gt;Objective-C で [ [ Object message1 ] message2 ] という式は、単に Object message1 message2 となる。&lt;br/&gt;&lt;br/&gt;５）全ての Cocoa クラスとそれらのメソッドは（ほぼ全て）そのまま使える&lt;br/&gt;&lt;br/&gt;F-Script は、そのインタプリタを通して Objective-C のランタイムを使って Cocoa にアクセスする。その為、Cocoa から見ると、そのアクセスが Objective-C からのものなのか F-Script からのものなのか区別がつかない。&lt;br/&gt;つまり、F-Script は、Objective-C で利用可能な Cocoa の機能を（ほぼ全て）そのまま使えると考えて良い。&lt;br/&gt;&lt;br/&gt;※ 但し、F-Script インタプリタは 純粋に Smalltalk の仕様に沿って作られている為、それが Smalltalk 的に見ると「変な」構文であるが故に F-Script からは利用できない、というメソッドが一部存在する。例えば、NSArray クラスのクラスメソッド「arrayWithObjects:」は、その一例である。このメソッドの仕様は、その引数（: の後ろ）に 複数のオブジェクトを「,」で区切って複数並べて指定する、というものだが、Smalltalk では、こうした引数の仕様はあり得ない。Smalltalk では、こうした場合、引数を「オブジェクトの配列」として、あくまでも一つのオブジェクトとして渡すような仕様になっている。&lt;br/&gt;&lt;br/&gt;</description>
      <enclosure url="http://hid2718.github.com/FScript/Blog/entori/2013/2/9_%5Bru_men%5Du%7Eindouwo_yitsu_biao_shishitemiyou_files/2013-06-09%2023.08.17.jpg" length="47932" type="image/jpeg"/>
    </item>
    <item>
      <title>［入門］F-Script コンソール を使ってみる</title>
      <link>http://hid2718.github.com/FScript/Blog/entori/2013/2/5_%5Bru_men%5DF-Script_konsoru_wo_shittemiru.html</link>
      <guid isPermaLink="false">95b1f919-7cec-4539-b4a0-99b742afafce</guid>
      <pubDate>Tue, 5 Feb 2013 19:02:05 +0900</pubDate>
      <description>&lt;a href=&quot;http://hid2718.github.com/FScript/Blog/entori/2013/2/5_%5Bru_men%5DF-Script_konsoru_wo_shittemiru_files/2013-05-26%2020.51.41.jpg&quot;&gt;&lt;img src=&quot;http://hid2718.github.com/FScript/Blog/Media/object000_4.jpg&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:184px; height:87px;&quot;/&gt;&lt;/a&gt;F-Script.app を起動すると、自動的に「コンソール」が開いて、入力を促すプロンプト &gt; が表示される。&lt;br/&gt;何らかの F-Script コードを実行するには、ここに直接、コードを入力して「return」キーを押せば良い。&lt;br/&gt;入力すべきコードが複数行に渡る場合には、「改行」のタイミングで「Ctrl」キーを押しながら「return」を押す。&lt;br/&gt;こうすることで、即実行されることなく、そこで「改行」され、継続して次の行を入力することができる。&lt;br/&gt;コンソールには、「↑」キーで過去の入力を呼び出せるヒストリー機能等、いくつか便利な機能があるが、詳細は、&lt;a href=&quot;http://hid2718.github.io/FScript/F-Script-Guide-ja/F-Script-Guide-1-16-ja.html&quot;&gt;F-Script Guide&lt;/a&gt; の &lt;a href=&quot;http://hid2718.github.io/FScript/F-Script-Guide-ja/F-Script-Guide-1-16-ja.html#mozTocId188792&quot;&gt;３ F-Script の使い方&lt;/a&gt; を見て欲しい。&lt;br/&gt;&lt;br/&gt;では、以下の様に入力して実行してみよう。次の行にその結果が表示され、次の入力を促すプロンプトが出る。&lt;br/&gt;&lt;br/&gt;    &gt; 2 + 3「return」&lt;br/&gt;    5&lt;br/&gt;&lt;br/&gt;    &gt;&lt;br/&gt;&lt;br/&gt;同様にして、以下の様に入力して、結果を確かめてみよう。&lt;br/&gt;&lt;br/&gt;    &gt; a := 2 + 3「return」&lt;br/&gt;&lt;br/&gt;    &gt; a「return」&lt;br/&gt;    5&lt;br/&gt;&lt;br/&gt;    &gt; b := 'abc' ++ 'def'「return」&lt;br/&gt;&lt;br/&gt;    &gt; b「return」&lt;br/&gt;    'abcdef'&lt;br/&gt;&lt;br/&gt;    &gt; b at: 0「return」&lt;br/&gt;    'a'&lt;br/&gt;&lt;br/&gt;    &gt; b at: 1「return」&lt;br/&gt;    'b'&lt;br/&gt;&lt;br/&gt;    &gt; b at: 6「return」&lt;br/&gt;&lt;br/&gt;    error: index of a a string must be a number less than the length of the string&lt;br/&gt;&lt;br/&gt;    &gt; c := { }「return」&lt;br/&gt;&lt;br/&gt;    &gt; c addObject: 'a'「return」&lt;br/&gt;&lt;br/&gt;    &gt; c「return」&lt;br/&gt;    {'a'}&lt;br/&gt;&lt;br/&gt;    &gt; c addObject: 'b' 「return」&lt;br/&gt;&lt;br/&gt;    &gt; c 「return」&lt;br/&gt;    {'a', 'b'}&lt;br/&gt;&lt;br/&gt;    &gt; c addObject: 100 「return」&lt;br/&gt;&lt;br/&gt;    &gt; c 「return」&lt;br/&gt;    {'a', 'b', 100}&lt;br/&gt;&lt;br/&gt;    &gt; &lt;br/&gt;&lt;br/&gt;さあ、これで F-Script コンソールにも慣れたことと思う。後は、&lt;a href=&quot;http://hid2718.github.io/FScript/Documents.html&quot;&gt;F-Script Guide&lt;/a&gt; と、&lt;a href=&quot;http://hid2718.github.io/FScript/Documents.html&quot;&gt;チュートリアル&lt;/a&gt;を参考にしながら、どんどん実験してみよう。 特に &lt;a href=&quot;http://hid2718.github.io/FScript/F-Script-Guide-ja/F-Script-Guide-1-16-ja.html&quot;&gt;F-Script Guide&lt;/a&gt; には、F-Script に関する基本的な知識が、系統立てて解説されている。例題も豊富なので、読むだけでなく、読みながら実際に実行してみることを強くお勧めしたい。&lt;br/&gt;&lt;br/&gt;最後に、コンソール上で日本語文字列を使う場合は、以下の点に注意して欲しい。&lt;br/&gt;コンソール上で、直接、日本語文字列を入力しようとすると、変換確定の return で「実行」されてしまい、意図した入力ができない。これは、F-Script コンソールがそうした変換入力を想定した実装になっていない為だ。&lt;br/&gt;しかし、他のエディタやWeb ページ等からの「コピペによる転記」であれば、問題なく入力することができる。&lt;br/&gt;</description>
      <enclosure url="http://hid2718.github.com/FScript/Blog/entori/2013/2/5_%5Bru_men%5DF-Script_konsoru_wo_shittemiru_files/2013-05-26%2020.51.41.jpg" length="39742" type="image/jpeg"/>
    </item>
    <item>
      <title>［情報］☆iOS用の「Super Debugger」登場☆☆</title>
      <link>http://hid2718.github.com/FScript/Blog/entori/2013/2/3_%5Bqing_bao%5D_F-Script_ben_jiasaitoni_iOS_yongnoSuperDebugger_deng_chang%21.html</link>
      <guid isPermaLink="false">87976548-f8e9-477c-919b-562b1c3a15dd</guid>
      <pubDate>Sun, 3 Feb 2013 21:08:26 +0900</pubDate>
      <description>&lt;a href=&quot;http://hid2718.github.com/FScript/Blog/entori/2013/2/3_%5Bqing_bao%5D_F-Script_ben_jiasaitoni_iOS_yongnoSuperDebugger_deng_chang%21_files/2013-05-25%2020.28.58%202.jpg&quot;&gt;&lt;img src=&quot;http://hid2718.github.com/FScript/Blog/Media/object028_1.jpg&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:183px; height:137px;&quot;/&gt;&lt;/a&gt;F-Script 本家サイトのトップページにこの F-Script-ja サイトへのリンクが張られたのと同じタイミングで、F-Script を使った「 iOS用アプリケーション開発支援ツール Super Debugger 」が公開された。&lt;br/&gt;このリンク先には&lt;a href=&quot;http://shopify.github.io/superdb/&quot;&gt;「Super Debugger for iOS」を使った iPhone アプリの UI 開発の様子を紹介する動画&lt;/a&gt;が置かれていて、このツールがどのような物であるかを大変具体的に知ることができる。&lt;br/&gt;&lt;br/&gt;まず、このツールは、iPhone 側ではなく、開発環境のある MacOSX 側で動作する開発支援ツールだ。&lt;br/&gt;Objective-C を使った通常の開発では、UI のちょっとした位置修正等でも、変更の都度、再コンパイルが必要だが、この Super Debugger を使えば、再コンパイルせずに、動的に変更しながら動かせる、ということのようだ。&lt;br/&gt;開発の生産性が劇的に向上するであろうことは想像に難くない。&lt;br/&gt;&lt;br/&gt;今や Cocoa は、MacOSX での開発よりも、iPhone や iPad など、iOS での開発の方が圧倒的にメジャーとなった。&lt;br/&gt;しかし、その開発者達のほとんどは「X-Code = Objective-C + Cocoa」で開発（や Cocoa の勉強）を行っている。&lt;br/&gt;この領域でも、F-Script は大幅な生産性の改善に寄与できるのは間違いなく、今後もこの Supe Debugger のような優れた環境が更に出てくれば、その存在が広く認知され、貢献できるようになるのではないかと期待される。&lt;br/&gt;&lt;br/&gt;この F-Script-ja でも、今後の動向をウォッチしていきたい。</description>
      <enclosure url="http://hid2718.github.com/FScript/Blog/entori/2013/2/3_%5Bqing_bao%5D_F-Script_ben_jiasaitoni_iOS_yongnoSuperDebugger_deng_chang%21_files/2013-05-25%2020.28.58%202.jpg" length="60533" type="image/jpeg"/>
    </item>
    <item>
      <title>［日誌］本家サイトにも F-Script-ja へのリンクができた☆！</title>
      <link>http://hid2718.github.com/FScript/Blog/entori/2013/2/3_%5B_ri_zhi%5D%3A_ben_jiasaitoni_F-Script-ja_henorinkugadekita.html</link>
      <guid isPermaLink="false">ef83ff79-1522-4491-a16c-41eaa44fcfa1</guid>
      <pubDate>Sun, 3 Feb 2013 20:10:59 +0900</pubDate>
      <description>&lt;a href=&quot;http://hid2718.github.com/FScript/Blog/entori/2013/2/3_%5B_ri_zhi%5D%3A_ben_jiasaitoni_F-Script-ja_henorinkugadekita_files/2013-05-25%2020.27.46.jpg&quot;&gt;&lt;img src=&quot;http://hid2718.github.com/FScript/Blog/Media/object027_1.jpg&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:183px; height:137px;&quot;/&gt;&lt;/a&gt;昨年末に、原著者の Philippe にメールを書いて、この F-Script-ja サイトの企画の相談をした時、翻訳公開への快諾と共に、「 &lt;a href=&quot;http://www.fscript.org/&quot;&gt;www.fscript.org&lt;/a&gt; にリンクを張るから、公開できたらサイトのURLを知らせて！」という返事を戴いた。そこで、公開後に早速、公開完了の報告と共にこのサイトのURLをメールで連絡したのだが、数日前に何気なく本家サイトを覗いてみたら、いつの間にかこのサイトへのリンクができていた☆！&lt;br/&gt;この小さなサイトが、ささやかながら世界に繋がった☆ 素晴しい！&lt;br/&gt;</description>
      <enclosure url="http://hid2718.github.com/FScript/Blog/entori/2013/2/3_%5B_ri_zhi%5D%3A_ben_jiasaitoni_F-Script-ja_henorinkugadekita_files/2013-05-25%2020.27.46.jpg" length="51386" type="image/jpeg"/>
    </item>
    <item>
      <title>［日誌］Smalltalk-users-jp に F-Script-ja へのリンク☆深謝！</title>
      <link>http://hid2718.github.com/FScript/Blog/entori/2013/1/23_%5Bri_zhi%5DSmalltalk-users-jp_ni_F-Script-ja_henorinku.html</link>
      <guid isPermaLink="false">65a9fe65-4524-456a-b5c8-0059adcb5960</guid>
      <pubDate>Wed, 23 Jan 2013 00:04:52 +0900</pubDate>
      <description>&lt;a href=&quot;http://hid2718.github.com/FScript/Blog/entori/2013/1/23_%5Bri_zhi%5DSmalltalk-users-jp_ni_F-Script-ja_henorinku_files/2013-06-18%2000.14.14.jpg&quot;&gt;&lt;img src=&quot;http://hid2718.github.com/FScript/Blog/Media/object009_1.jpg&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:210px; height:137px;&quot;/&gt;&lt;/a&gt;一昨日、Smalltalk-users-ja を主宰する梅澤さんに、F-Script-ja サイトの正式公開の連絡メールを差し上げた。すると速攻で昨日の内に、&lt;a href=&quot;http://www.smalltalk-users.jp/&quot;&gt;Smalltalk-users-jp のトップページ&lt;/a&gt;と&lt;a href=&quot;http://www.smalltalk-users.jp/Home/docs&quot;&gt;文書ページ&lt;/a&gt;に、このサイトへのリンクと紹介文を作って下さった！深謝☆です！&lt;br/&gt;梅澤さんには、このサイトの企画段階からずっと、何から何までお世話になりっぱなしで、深く御礼申し上げます。</description>
      <enclosure url="http://hid2718.github.com/FScript/Blog/entori/2013/1/23_%5Bri_zhi%5DSmalltalk-users-jp_ni_F-Script-ja_henorinku_files/2013-06-18%2000.14.14.jpg" length="96168" type="image/jpeg"/>
    </item>
    <item>
      <title>Mountain Lion 対応: F-Script 不具合の原因と対策</title>
      <link>http://hid2718.github.com/FScript/Blog/entori/2013/1/20_Mountain_Lion_dui_ying__F-Script_bu_ju_heno_yuan_yinto_dui_ce.html</link>
      <guid isPermaLink="false">b6e240ab-6df4-45a0-8fe7-9b0bc1a5e50d</guid>
      <pubDate>Sun, 20 Jan 2013 23:19:36 +0900</pubDate>
      <description>&lt;a href=&quot;http://hid2718.github.com/FScript/Blog/entori/2013/1/20_Mountain_Lion_dui_ying__F-Script_bu_ju_heno_yuan_yinto_dui_ce_files/2013-01-20%2020.05.49_1.jpg&quot;&gt;&lt;img src=&quot;http://hid2718.github.com/FScript/Blog/Media/object225_1.jpg&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:212px; height:137px;&quot;/&gt;&lt;/a&gt;F-Script の最新バージョン 2.1 には、Mac OS X 10.8（Mountain Lion）で起動するとクラッシュする、という不具合があることが報告されている。&lt;br/&gt;当サイトでは、公式サイトからダウンロードしたバージョン 2.1 の ZIP に同梱されているプロジェクトファイルを修正＆リビルドし、問題の対策版を独自に配布することにした。　　　　　 → &lt;a href=&quot;https://dl.dropbox.com/u/11990037/F-Script20100614-Rebuild-for-Mountain-Lion-by-hid2718-20130114.zip&quot;&gt;ダウンロードはこちらから&lt;/a&gt;&lt;br/&gt;以下に、その対策の改修手順について記録しておく。&lt;br/&gt;※ この記事の作業環境：Mac OS X 10.6.8 Snow Leopard ／ Xcode 3.2.6&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;■ 原因&lt;br/&gt;&lt;br/&gt;F-Script チュートリアル記事の一つ「&lt;a href=&quot;http://hid2718.github.com/FScript/AccessingMacOSXFrameworksWithFScript-index-ja.html&quot;&gt;F-Script で Mac OS X のフレームワーク群にアクセスする&lt;/a&gt;」にも説明があるように、F-Script は、起動時に40個ものフレームワークを自動リンクしている。&lt;br/&gt;この中には、F-Script 自身の動作の為にも必要なもの（Foundation Kit や Application Kit など）も当然含まれているが、そのほとんどは、事前作業無しでそのフレームワークが使えるように、ユーザーの利便を図る目的でリンクされているものだ。&lt;br/&gt;今回の不具合は、このユーザーの利便を図る目的で起動時に自動リンクしているフレームワークの一つ「XgridFoundation」が、Mountain Lion では廃止されたことが「原因」である。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;■ 対策方針&lt;br/&gt;&lt;br/&gt;ML で廃止された「XgridFoundation」は、F-Script 自体の動作には関与しないフレームワークである為、単に、プロジェクトの構成からこれを削除して、プロジェクトをビルドし直す、という方針で改修を行った。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;■ 改修手順&lt;br/&gt;&lt;br/&gt;１）公式サイトからダウンロードして解凍したフォルダの「source」直下&lt;br/&gt;　にある「FScript.xcodeproj」を Xcode で開く。&lt;br/&gt;&lt;br/&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　&lt;br/&gt;&lt;br/&gt;２）「プロジェクトの検索」ボタンを押し、「プロジェクト内」を対象に&lt;br/&gt;　検索文字列：「 XgridFoundation」と入力して検索する。&lt;br/&gt;　この文字列を含む箇所が、３カ所見つかった。&lt;br/&gt;&lt;br/&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　&lt;br/&gt;&lt;br/&gt;３）FSConstantsDictionaryGenerator.m の以下をコメントアウト。保存。&lt;br/&gt;　#import &amp;lt;XgridFoundation/XgridFoundation.h&gt;&lt;br/&gt;　　↓&lt;br/&gt;　// #import &amp;lt;XgridFoundation/XgridFoundation.h&gt;&lt;br/&gt;　もう一つのファイルの該当箇所は、コメント文の為、そのままとする。&lt;br/&gt;&lt;br/&gt;４） Xcode の左側「グループとファイル」ペインに表示されている 各種&lt;br/&gt;　フレームワーク群の最後にある「 XgridFoundation.framework」の上で&lt;br/&gt;　右クリックして「削除」を選択。このプロジェクトへのリンクを外す。&lt;br/&gt;&lt;br/&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　&lt;br/&gt;&lt;br/&gt;５）Xcode メニュー：「プロジェクト＞アクティブターゲットを設定」&lt;br/&gt;　で「F-Script」を選択。&lt;br/&gt;&lt;br/&gt;６） Xcode メニュー：「プロジェクト＞アクティブビルド構成を設定」&lt;br/&gt;　で「Deployment」を選択。&lt;br/&gt;&lt;br/&gt;７） Xcode メニュー：「ビルド＞ビルド」を選択。&lt;br/&gt;　ビルドが完了すると、解凍したフォルダの中の「source / build」の下&lt;br/&gt;　に「Deployment」というフォルダができ、その中に今回のビルド結果&lt;br/&gt;　である「F-Script.app」が生成されるので、これを、フォルダの直下に&lt;br/&gt;　コピーして、今回の改修作業は終了。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;■ 動作確認&lt;br/&gt;&lt;br/&gt;８）今回の改修結果を Mountain Lion 環境下で起動して、無事に動作する&lt;br/&gt;　ことを確認し、ご連絡を下さった &lt;a href=&quot;https://twitter.com/kuritar&quot;&gt;@kuritar&lt;/a&gt; さんに深く感謝致します。&lt;br/&gt;　ありがとうございました！&lt;br/&gt;&lt;br/&gt;</description>
      <enclosure url="http://hid2718.github.com/FScript/Blog/entori/2013/1/20_Mountain_Lion_dui_ying__F-Script_bu_ju_heno_yuan_yinto_dui_ce_files/2013-01-20%2020.05.49_1.jpg" length="47249" type="image/jpeg"/>
    </item>
    <item>
      <title>F-Script を Mac にインストールする</title>
      <link>http://hid2718.github.com/FScript/Blog/entori/2013/1/15_F-Script_wo_Mac_niinsutorusuru.html</link>
      <guid isPermaLink="false">879c3b0c-713e-4174-aae2-54914e47f70a</guid>
      <pubDate>Tue, 15 Jan 2013 19:35:15 +0900</pubDate>
      <description>&lt;a href=&quot;http://hid2718.github.com/FScript/Blog/entori/2013/1/15_F-Script_wo_Mac_niinsutorusuru_files/2013-01-20%2000.29.05.jpg&quot;&gt;&lt;img src=&quot;http://hid2718.github.com/FScript/Blog/Media/object001_1.jpg&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:183px; height:137px;&quot;/&gt;&lt;/a&gt;■ Mac OS X 10.6 Snow Leopard ／ 10.7 Lion の場合&lt;br/&gt;&lt;br/&gt;F-Script の最新バージョンは「 F-Script 2.1 」だ。&lt;br/&gt;公式サイトの &lt;a href=&quot;http://www.fscript.org/index.htm&quot;&gt;HOME&lt;/a&gt; か  &lt;a href=&quot;http://www.fscript.org/download/download.htm&quot;&gt;DOWNLOAD&lt;/a&gt; からZIP形式で入手できる。&lt;br/&gt;環境が Mac OS X 10.6 Snow Leopard か 10.7 Lion の場合は、これをダウンロードすればよい。（ 10.8 Mountain Lion では不具合あり！後述。）&lt;br/&gt;ZIP を解凍すると「F-Script20100614」というフォルダが出てくる。 この直下にある「F-Script（.app）」をアプリケーションフォルダにコピーすれば、F-Script 本体のインストールは完了だ。&lt;br/&gt;これをダブルクリックして、すぐに F-Script を使い始めることができる。&lt;br/&gt;&lt;br/&gt;■ Mac OS X 10.8 Mountain Lion の場合&lt;br/&gt;&lt;br/&gt;このバージョンは Mac OS X 10.6（Snow Leopard）以降に対応したものなのだが、Mac OS X 10.8 Mountain Lion では、起動時にクラッシュしてしまう という不具合が報告されている。&lt;br/&gt;しかも、ユーザーグループの貢献で&lt;a href=&quot;https://groups.google.com/forum/?fromgroups=#!topic/f-script/QtBuJ7HE7Yk&quot;&gt;原因が判明している&lt;/a&gt;にも拘らず、対策版の公式リリースはまだなされていない。開発者 Philippe Mougin の事情で、対応作業に時間を割けない状況が続いているようだ。&lt;br/&gt;&lt;br/&gt;そこで、このサイトでは、独自に対策＆リビルドしたものを作成して配布することにした。&lt;a href=&quot;https://dl.dropbox.com/u/11990037/F-Script20100614-Rebuild-for-Mountain-Lion-by-hid2718-20130114.zip&quot;&gt;ここから&lt;/a&gt; ダウンロードして欲しい。&lt;br/&gt;&lt;br/&gt;★謝辞&lt;br/&gt;&lt;br/&gt;この問題をご教示下さり、このリビルド版の Mountain Lion 環境での動作確認まで行って下さった &lt;a href=&quot;https://twitter.com/kuritar&quot;&gt;@kuritar&lt;/a&gt; さんに、深く感謝致します。&lt;br/&gt;</description>
      <enclosure url="http://hid2718.github.com/FScript/Blog/entori/2013/1/15_F-Script_wo_Mac_niinsutorusuru_files/2013-01-20%2000.29.05.jpg" length="73365" type="image/jpeg"/>
    </item>
    <item>
      <title>F-Script ドキュメント日本語訳の仮公開を開始☆！</title>
      <link>http://hid2718.github.com/FScript/Blog/entori/2013/1/4_F-Script_dokyumento_ri_ben_yu_yino_jia_gong_kaiwo_kai_shi%21.html</link>
      <guid isPermaLink="false">1fe91040-7d7b-4886-a7fb-4ee718fe8d2e</guid>
      <pubDate>Fri, 4 Jan 2013 02:33:51 +0900</pubDate>
      <description>&lt;a href=&quot;http://hid2718.github.com/FScript/Blog/entori/2013/1/4_F-Script_dokyumento_ri_ben_yu_yino_jia_gong_kaiwo_kai_shi%21_files/2013-01-04%2003.02.11-filtered.jpg&quot;&gt;&lt;img src=&quot;http://hid2718.github.com/FScript/Blog/Media/object000_5.jpg&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:183px; height:137px;&quot;/&gt;&lt;/a&gt;思い立って、数ヶ月前から F-Script 公式ドキュメントの翻訳を始めた。&lt;br/&gt;ペースは非っ常ーにスロー;; それでも訳文がいくつかできてきたので、少しずつ Web で公開して行くことにした。&lt;br/&gt;年末から GitHub に公開用のアカウントを用意し、iWeb でサイトを制作。&lt;br/&gt;今日、漸く、とりあえずの（仮）公開準備が整った！&lt;br/&gt;&lt;br/&gt;ここまで辿り着くのに &lt;a href=&quot;http://www.smalltalk-users.jp/&quot;&gt;Smalltalk勉強会&lt;/a&gt; の&lt;a href=&quot;https://twitter.com/umejava&quot;&gt;梅澤さん&lt;/a&gt;と&lt;a href=&quot;https://twitter.com/tetha&quot;&gt;林さん&lt;/a&gt;には思いっ切りお世話になりました。感謝！です。&lt;br/&gt;この場を借りて、厚く厚く御礼申し上げます。 &lt;br/&gt;&lt;br/&gt;最後に、 F-Script の開発者 Mr. Philippe Mougin には、 著作物の日本語への翻訳と Web 公開に関する私の問合せに対し、ほんの数時間で「快諾」の返信を戴きました。迅速で温かい対応に深く感謝致します。&lt;br/&gt;&lt;br/&gt;Thank you, Mr. Philippe Mougin !</description>
      <enclosure url="http://hid2718.github.com/FScript/Blog/entori/2013/1/4_F-Script_dokyumento_ri_ben_yu_yino_jia_gong_kaiwo_kai_shi%21_files/2013-01-04%2003.02.11-filtered.jpg" length="135019" type="image/jpeg"/>
    </item>
  </channel>
</rss>
